openapi: "3.0.3"
info:
  title: ColourYou API
  description: "L'API du moment"
  version: 2.0.0
# servers:
#   - url: http://api.example.com/v1
#     description: Optional server description, e.g. Main (production) server
#   - url: http://staging-api.example.com
#     description: Optional server description, e.g. Internal staging server for testing
tags:
  - name: user
    description: Everything about the users
  - name: photo
    description: Access to the photos
  - name: couleur
    description: See the couleurs
paths:
  /users:
    get:
      tags: 
        - user
      summary: Retourne une liste d'utilisateurs
      description: Optional extended description in CommonMark or HTML
      responses:
        '200':
          description: A JSON array of user names
          content:
            application/json:
              schema:
                # $ref: '#/components/schemas/User'
                type: array
                items: 
                  type: string
    post:
      tags: 
        - user
      summary: Créer un utilisateur
      description: Insérer les champs nécessaires pour la création d'un utilisateur
      parameters:
        - name: name
          in: path
          required: true
          description: Prénom de l'utilisateur
        - name: surname
          in: path
          required: true
          description: Nom de l'utilisateur
        - name: email
          in: path
          required: true
          description: Adresse mail de l'utilisateur
        - name: password
          in: path
          required: true
          description: Mot de passe
        - name: username
          in: path
          required: true
          description: Pseudo de l'utilisateur
        - name: age
          in: path
          description: Age de l'utilisateur
      responses:
        '200':
          description: Utilisateur crée
          content:
            application/json:
              schema: 
                # $ref: '#./models/user'
                # type: array
                # items: 
                #   type: string
                type: object
                properties:
                  name:
                    type: string
                    description: Prénom de l'utilisateur
                    example: John
                  surname:
                    type: string
                    description: Nom de l'utilisateur
                    example: Doe
                  email:
                    type: string
                    description: Mail de l'utilisateur
                    example: johndoe@hotmail.com
                  password:
                    type: string
                    description: Mot de passe de l'utilisateur
                    example: test1234
                  username:
                    type: string
                    description: Pseudo de l'utilisateur
                    example: john.doe
                  age:
                    type: number
                    description: L'âge de l'utilisateur
                    example: 24
        '400':
          description: Champs incorrect(s)
        '404':
          description: 'Page non trouvée'
  /users/{id}:
    get:
      tags: 
        - user
      summary: Trouver les informations d'un utilisateur par son id
      parameters:
        - name: id
          in: path
          description: L'identifiant unique de l'utilisateur
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                _id: 
                  type: string
                  description: ID unique de l'utilisateur
                  example: "636cb9790788f89587f12895"
                name:
                  type: string
                  description: Prénom de l'utilisateur
                  example: John
                surname:
                  type: string
                  description: Nom de l'utilisateur
                  example: Doe
      responses:
        '200':
          description: Utilisateur crée            
  /users/login:
    get:
      tags: 
        - user
      summary: Connecte l'utilisateur à l'API
      description: Se connecter à l'API
      parameters:
        - name: username
          in: path
          description: Le nom d'utilisateur
          required: true
          schema:
            type: string
        - name: password
          in: path
          description: Mot de passe
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Pseudo de l'utilisateur
                  example: john.doe
                password:
                  type: string
                  description: Mot de passe de l'utilisateur
                  example: john1234
      responses:
        '200':
          description: Utilisateur connecté 
        '400':
          description: Le nom d'utilisateur et/ou le mot de passe incorrect
        '404':
          description: Ressource non trouvée
  /users/logout:
    get:
      tags: 
        - user
      summary: Déconnecte l'utilisateur
      description: Déconnexion de l'utilisateur de l'API
      responses:
        '200':
          description: L'utilisateur est déconnecté avec succès
        '404': 
          description: Page non trouvée

  # /users/{username}:
  #   get:
  #     tags: 
  #       - user
  #     summary: Affiche l'utilisateur par l'id
  #     description: Optional extended description in CommonMark or HTML
  #     responses:
  #       '200':
  #         description: Logout the user from the session
  #         content:
  #           application/json:
  #             schema: 
  #               $ref: '#/models/user'
  #               type: array
  #               items: 
  #                 type: string

  # /users/{name}:
  #   get:
  #     tags: 
  #       - user
  #     summary: Logout the user
  #     description: Optional extended description in CommonMark or HTML
  #     responses:
  #       '200':
  #         description: Logout the user from the session
  #         content:
  #           application/json:
  #             schema: 
  #               $ref: '#/models/user'
  #               type: array
  #               items: 
  #                 type: string

  # /users/{surname}:
  #   get:
  #     tags: 
  #       - user
  #     summary: Logout the user
  #     description: Optional extended description in CommonMark or HTML
  #     responses:
  #       '200':
  #         description: Logout the user from the session
  #         content:
  #           application/json:
  #             schema: 
  #               $ref: '#/models/user'
  #               type: array
  #               items: 
  #                 type: string
  /photos:
    get:
      tags:
        - photo
      summary: Retourne une liste des photos
      description: ''
    post:
      tags:
        - photo
      summary: Ajouter une photo
      description: ''
      operationId: uploadFile
      parameters:
        - name: photoId
          in: path
          description: ID de la photo
          required: true
          schema:
            type: integer
            format: int64
        - name: description
          in: path
          description: Description de la photo
          required: false
          schema:
            type: string
        - name: date
          in: path
          description: Date mise en ligne de la photo
          required: false
          schema:
            type: string
        - name: location
          in: path
          description: Données géo de la photo
          required: true
          schema:
            type: string
        - name: url
          in: path
          description: Le lien de la photo
          required: true
          schema:
            type: string
        - name: user
          in: path
          description: Utilisateur existant qui a posté de la photo
          required: true
          schema:
            type: string
        - name: color
          in: path
          description: Le thème couleur de la photo
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                photoId:
                  type: string
                  description: ID de la photo
                  example: Bleu marine
                description:
                  type: string
                  example: '#1F1F1F'
                datePosted:
                  type: date
                  example: 07.11.2022
                
      responses:
        '200':
          description: Photo ajoutée avec succès
        '400':
          description: ''
        '404':
          description: Page non trouvée
  
  /photos/{id}:
    get:
      tags:
        - photo
      summary: Affiche la photo par son ID
      description: ''
      parameters:
        - name: photoId
          in: path
          description: ID de la photo sélectionnée
          required: false
          schema:
            type: string
    put:
      tags:
        - photo
      summary: Met à jour la photo par son ID
      description: ''
      parameters:
        - name: photoId
          in: path
          description: ID de la photo sélectionnée
          required: false
          schema:
            type: string
    delete:
      tags:
        - photo
      summary: Supprime la photo par son ID
      description: ''
      parameters:
        - name: photoId
          in: path
          description: ID de la photo sélectionnée
          required: false
          schema:
            type: string
  /couleurs:
    get:
      tags:
        - couleur
      summary: Retourne une liste des couleurs
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Nom de la couleur
                  example: Bleu marine
                hex:
                  type: string
                  description: Code hexadécimal de la couleur
                  example: '#1F1F1F'
                datePosted:
                  type: date
                  description: Date à laquelle la couleur apparaît
              examples:
                name: Vert pomme
                hex: '#222222'
                datePosted: 07/09/2022
      responses:
        '200':
          description: OK
        '400':
          description: ''
        '404':
          description: Page non trouvée
    put:
      tags:
        - couleur
      summary: Met à jour les couleurs
      description: ''
  /couleurs/{id}:
    get:
      tags:
        - couleur
      summary: Affiche la couleur par son ID
      description: ''
      parameters:
        - name: photoId
          in: path
          description: ID de la couleur
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Nom de la couleur
                  example: Bleu marine
                hex:
                  type: string
                  description: Code hexadécimal de la couleur
                  example: '#1F1F1F'
                datePosted:
                  type: date
                  description: 07/09/2022
    post:
      tags:
        - couleur
      summary: Modifier la couleur par son ID
      description: ''
      parameters:
        - name: couleurId
          in: path
          description: ID de la couleur
          required: true
          unique: true
          schema:
            type: string
        - name: name
          in: path
          description: Nom de la couleur
          required: true
          unique: true
          schema:
            type: string
        - name: hex
          in: path
          description: Code hexadécimal de la couleur
          required: true
          unique: true
          schema:
            type: string
        - name: datePosted
          in: path
          description: Date à laquelle la couleur apparaît
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Nom de la couleur
                  example: Bleu marine
                hex:
                  type: string
                  description: Code hexadécimal de la couleur
                  example: '#1F1F1F'
                datePosted:
                  type: date
                  description: Date à laquelle la couleur apparaît
      responses:
        '200':
          description: Couleur ajoutée avec succès
        '400':
          description: ''
        '404':
          description: Page non trouvée
    delete:
      tags:
        - couleur
      summary: Supprimer la couleur par son ID
      description: ''
    
    
    